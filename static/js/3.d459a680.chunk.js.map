{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","alt","className","s","descriptionBlock","photos","large","aboutMe","contacts","vk","twitter","instagram","fullName","Preloader","Post","item","message","likeCount","MyPosts","memo","postsElements","posts","map","p","key","id","likesCount","console","log","postsBlock","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","AddNewPostForm","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","reduxForm","form","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.d459a680.chunk.js","sourcesContent":["import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n};\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                return <Redirect to={'/login'}/>\n            }\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode]  = useState(false);\n    let [status, setStatus]  = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () =>  {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () =>  {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\n            </div>\n            }\n            { editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\n                       value={status}/>\n            </div>\n            }\n        </div>\n    )\n};\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css'\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div>\n                <img\n                    src={'https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg'} alt ='alt'/>\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large} alt = 'alt'/>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n            <div> О себе: {profile.aboutMe}</div>\n            <div>Контакты:\n                <div>{profile.contacts['facebook']}</div>\n                <div>{profile.contacts.vk}</div>\n                <div>{profile.contacts.twitter}</div>\n                <div>{profile.contacts.instagram}</div>\n            </div>\n            <div>{profile.fullName}</div>\n        </div>\n    );\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img alt='post' src={'https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg'}/>\n            {props.message}\n            <div>\n                <span> Like </span>{props.likeCount}\n            </div>\n        </div>\n    );\n};\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\n\nconst MyPosts = React.memo((props) => {\n\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likesCount}/>);\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n    console.log('renderYo');\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddNewPostForm onSubmit={onAddPost}/>\n            <div className={s.posts}>\n                {\n                    postsElements\n                }\n            </div>\n        </div>\n    );\n});\n\n// class MyPosts extends React.PureComponent {\n//     render() {\n//         console.log('renderYo');\n//         let postsElements = this.props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likesCount}/>);\n//\n//         let onAddPost = (values) => {\n//             this.props.addPost(values.newPostText);\n//         };\n//         return (\n//             <div className={s.postsBlock}>\n//                 <h3>My posts</h3>\n//                 <AddNewPostForm onSubmit={onAddPost}/>\n//                 <div className={s.posts}>\n//                     {\n//                         postsElements\n//                     }\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <div>\n                    <Field component={Textarea} name={'newPostText'}\n                    validate={[required, maxLength10]} placeholder={'Post message'}/>\n                </div>\n                <div>\n                    <button>Add post</button>\n                </div>\n            </div>\n        </form>\n    )\n};\n\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nexport default MyPosts;\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from 'react-redux';\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n};\n\n// High Order Component & Compose\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), //3\n    withRouter, // 2\n    withAuthRedirect, // 1\n)(ProfileContainer);\n"],"sourceRoot":""}